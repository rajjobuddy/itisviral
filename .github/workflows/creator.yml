name: Generate Veo Video

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Prompt to generate video'
        required: true
        type: string

jobs:
  generate-video:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: gothic-envelope-458808-h6
      LOCATION_ID: us-central1
      API_ENDPOINT: us-central1-aiplatform.googleapis.com
      MODEL_ID: veo-3.0-generate-preview
      OUTPUT_VIDEO: output.mp4

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up jq and curl
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true

      - name: Create request.json
        run: |
          cat <<EOF > request.json
          {
            "endpoint": "projects/${PROJECT_ID}/locations/${LOCATION_ID}/publishers/google/models/${MODEL_ID}",
            "instances": [
              {
                "prompt": "${{ github.event.inputs.prompt }}"
              }
            ],
            "parameters": {
              "aspectRatio": "16:9",
              "sampleCount": 1,
              "durationSeconds": "8",
              "personGeneration": "allow_adult",
              "addWatermark": true,
              "includeRaiReason": true,
              "generateAudio": true
            }
          }
          EOF

      - name: Run video generation script
        run: |
          chmod +x makevideo.sh
          ./makevideo.sh

      - name: Debug Show API response
        run: |
          jq . fetch_response.json

      - name: Extract video URL
        id: extract_url
        run: |
          VIDEO_URL=$(jq -r '.response.videos[0].videoUri // .response.videos[0].videoUrl // empty' fetch_response.json)
          if [[ -z "$VIDEO_URL" ]]; then
            echo "Could not find video URL in response:"
            cat fetch_response.json
            exit 1
          fi
          echo "VIDEO_URL=$VIDEO_URL" >> $GITHUB_OUTPUT

      - name: Download generated video
        run: |
          curl -L "${{ steps.extract_url.outputs.VIDEO_URL }}" --output "${OUTPUT_VIDEO}"

      - name: Upload video artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-video
          path: output.mp4
